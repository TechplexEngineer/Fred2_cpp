// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVE_H
#define DRIVE_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
// #include "IMU.h"
// #include "IMUAdvanced.h"
#include "NavX/AHRS.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Drive: public Subsystem {
private:
	// It's desirable that everything possible under private except
	// for methods that implement subsystem capabilities
	double prevTurn = 0;
	double targetHeading = 0;
	double error = 0;
	const double Kp = 0.03; //.05
	double ds_kp = 0.03;
	AHRS* imu;
	SerialPort *serial_port;
	const double voltsPerDegreePerSecond = 0.0065;
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController* leftFront;
	SpeedController* leftRear;
	SpeedController* rightFront;
	SpeedController* rightRear;
	RobotDrive* drivetrain;
	SpeedController* strafe;
	Gyro* gyro;
	Encoder* leftEncoder;
	Encoder* rightEncoder;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	Drive();
	void InitDefaultCommand();

	void HDrive(double moveValue, double turnValue, double strafeValue);
	void stop();
	void resetGyro();
	void hDrive(double drive, double turn, double slide);
	void driveStraight(double speed);
	double leftDistance();
	double rightDistance();
	void resetLeftDistance();
	void ResetRightDistance();
	double getGyroAngle();
	double getOldGyroAngle();
	double getDegreesFromEncoderValues();
};

#endif
